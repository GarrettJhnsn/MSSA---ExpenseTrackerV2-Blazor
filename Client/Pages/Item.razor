@page "/item"
@page "/item/{id:int}"
@inject IExpenseService ExpenseService

@if(Id == null)
{
    <PageTitle>Add a new Expense</PageTitle>
    <h3>Add a new Expense</h3>
}
else
{
    <PageTitle>Edit @expense.Name</PageTitle>
    <h3>Edit @expense.Name</h3>
}

<EditForm Model="expense" OnSubmit="HandleSubmit">
    <div>
        <label for="Name">Name</label>
        <InputText id="Name" @bind-Value="expense.Name" class="form-control"></InputText>
    </div>
    <div>
        <label for="Amount">Amount</label>
        <InputNumber id="Amount" @bind-Value="expense.Amount" class="form-control"></InputNumber>
    </div>
    <div>
        <label>Type</label><br />
        <InputSelect @bind-Value="expense.ItemSetId" class="form-select">
            @foreach (var iType in ExpenseService.ItemSets)
            {
                <option value="@iType.Id">@iType.Name</option>
            }
        </InputSelect>
    </div>
    <br />
    <button type="submit" class="btn btn-outline-primary">@btnText</button>
    <button type="submit" class="btn btn-outline-danger" @onclick="DeleteItem">Delete Item</button>

</EditForm>


@code {
    [Parameter]
    public int? Id { get; set; }
    string btnText = string.Empty;

    Expense expense = new Expense { ItemSet = new ItemSet() };

    protected override async Task OnInitializedAsync()
    {
        btnText = Id == null ? "Save New Item " : "Update Item";
        await ExpenseService.GetItemTypes();
    }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
        {
            expense.ItemSet = ExpenseService.ItemSets[0];
            expense.ItemSetId = expense.ItemSet.Id;
        }
        else
        {
            expense = await ExpenseService.GetSingleExpense((int)Id);
        }
    }

    async Task HandleSubmit()
    {
        if(Id == null)
        {
            await ExpenseService.CreateItem(expense);
        }
        else
        {
            await ExpenseService.UpdateItem(expense);
        }
    }

    async Task DeleteItem()
    {
        await ExpenseService.DeleteItem(expense.Id);
    }
}
