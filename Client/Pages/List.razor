@page "/list"
@inject IExpenseService ExpenseService
@inject NavigationManager NavigationManager

<PageTitle>Expense List</PageTitle>

@if(!isLoading)
{
<div>
  <div class="spinner spinner-border-sm"></div>
</div>
}
else
{
<div>
    <h2>Expense Tracker</h2>
    <h3>Current Items: Current Total: </h3>
    <table class = "table table-striped">
        <thead>
            <tr>
                <th scope-"col">Item</th>
                <th scope-"col">Amount</th>
                <th scope-"col">Type</th>
                <th scope-"col"></th>
            </tr>
        </thead>
        <tbody>
            @foreach(var expense in ExpenseService.Expenses)
            {
                <tr>
                    <td>@expense.Name</td>
                    <td>@expense.Amount</td>
                    <td>@expense.ItemSet.Name</td>
                    <td>
                        <button class="btn btn-outline-primary" @onclick="(() => ShowExpense(expense.Id))"><i class="oi oi-pencil"></i></button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <button type="submit" class="btn btn-outline-primary" @onclick="CreateItem">Add Item</button>
</div>  
}


@code {
    private bool isLoading;

    protected override async Task OnInitializedAsync()
    {   await Task.Delay(1000);
        isLoading = true;
        await ExpenseService.GetExpenses();
        
    }

    void ShowExpense(int id)
    {
        NavigationManager.NavigateTo($"item/{id}");
    }

    void CreateItem()
    {
        NavigationManager.NavigateTo("item");
    }


}
